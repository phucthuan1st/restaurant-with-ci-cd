name: Deploy Node App to EC2 Server with Docker Registry
on:
  push:
    branches:
      - master
      - main

jobs:
  test_phase:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  infrastructure_check_phase:
    runs-on: ubuntu-latest
    
    steps:
      - name: SSH into server and run infrastructure check
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            echo "Starting infrastructure checks..."

            echo "Check if UFW is active..."
            if sudo ufw status | grep -q "Status: active"; then
              echo "UFW is active"
            else
              echo "UFW is not active"
              exit 1
            fi

            echo "Check if Nginx config is OK..."
            if sudo nginx -t; then
              echo "Nginx config is OK"
            else
              echo "Nginx config is not OK"
              exit 1
            fi

            echo "Check if the domain restaurant.example.com is reachable..."
            if ping -c 1 restaurant.example.com &> /dev/null; then
              echo "Domain is reachable"
            else
              echo "Domain is not reachable"
              
            fi

            echo "Check disk space usage..."
            if df -h | grep '^/dev/' | awk '{ if ($5+0 > 80) exit 1 }'; then
              echo "Disk space usage is within limits"
            else
              echo "Disk space usage is too high"
              exit 1
            fi

            echo "All infrastructure checks passed successfully."

  image_build_and_push_phase:
    needs: [infrastructure_check_phase, test_phase]
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{secrets.DOCKER_REGISTRY}}:latest

  image_pull_and_deploy_phase:
    needs: [image_build_and_push_phase]
    runs-on: ubuntu-latest
    
    steps:
      - name: SSH into server and update container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            sudo docker pull ${{secrets.DOCKER_REGISTRY}}:latest
            sudo docker stop server || true
            sudo docker rm server || true
            sudo docker run -d --name server --network host --restart always ${{secrets.DOCKER_REGISTRY}}:latest
            sudo docker ps -a
